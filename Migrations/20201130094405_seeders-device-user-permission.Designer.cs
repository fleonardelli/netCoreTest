// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api.Models;

namespace api.Migrations
{
    [DbContext(typeof(IotHomeControlContext))]
    [Migration("20201130094405_seeders-device-user-permission")]
    partial class seedersdeviceuserpermission
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("api.Models.Device", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int unsigned");

                    b.Property<uint>("DeviceTypeId")
                        .HasColumnName("device_type_id")
                        .HasColumnType("int unsigned");

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasColumnName("external_id")
                        .HasColumnType("varchar(255)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_general_ci");

                    b.HasKey("Id");

                    b.HasIndex("DeviceTypeId")
                        .HasName("device_type_id");

                    b.HasIndex("ExternalId")
                        .IsUnique()
                        .HasName("external_id");

                    b.ToTable("device");

                    b.HasData(
                        new
                        {
                            Id = 1u,
                            DeviceTypeId = 1u,
                            ExternalId = "000x123asd213"
                        });
                });

            modelBuilder.Entity("api.Models.DeviceType", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int unsigned");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_general_ci");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasName("name");

                    b.ToTable("device_type");

                    b.HasData(
                        new
                        {
                            Id = 1u,
                            Name = "Thermostat"
                        },
                        new
                        {
                            Id = 2u,
                            Name = "Door"
                        });
                });

            modelBuilder.Entity("api.Models.Family", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int unsigned");

                    b.Property<uint>("MainUserId")
                        .HasColumnName("main_user_id")
                        .HasColumnType("int unsigned");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnName("surname")
                        .HasColumnType("varchar(150)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_general_ci");

                    b.HasKey("Id");

                    b.ToTable("family");

                    b.HasData(
                        new
                        {
                            Id = 1u,
                            MainUserId = 1u,
                            Surname = "Thompson"
                        });
                });

            modelBuilder.Entity("api.Models.Permission", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int unsigned");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_general_ci");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasName("name");

                    b.ToTable("permission");

                    b.HasData(
                        new
                        {
                            Id = 1u,
                            Name = "LOCK"
                        },
                        new
                        {
                            Id = 2u,
                            Name = "UNLOCK"
                        },
                        new
                        {
                            Id = 3u,
                            Name = "REQUEST_UNLOCK"
                        },
                        new
                        {
                            Id = 4u,
                            Name = "REQUEST_LOCK"
                        });
                });

            modelBuilder.Entity("api.Models.Rol", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int unsigned");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_general_ci");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasName("name");

                    b.ToTable("rol");

                    b.HasData(
                        new
                        {
                            Id = 1u,
                            Name = "ROL_USER"
                        },
                        new
                        {
                            Id = 2u,
                            Name = "ROL_CHILDREN"
                        });
                });

            modelBuilder.Entity("api.Models.User", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int unsigned");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("email")
                        .HasColumnType("varchar(150)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_general_ci");

                    b.Property<uint>("FamilyId")
                        .HasColumnName("family_id")
                        .HasColumnType("int unsigned");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("varchar(150)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_general_ci");

                    b.Property<uint>("RolId")
                        .HasColumnName("rol_id")
                        .HasColumnType("int unsigned");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnName("surname")
                        .HasColumnType("varchar(150)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_general_ci");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasName("email");

                    b.HasIndex("FamilyId")
                        .HasName("family_id");

                    b.HasIndex("RolId")
                        .HasName("rol_id");

                    b.ToTable("user");

                    b.HasData(
                        new
                        {
                            Id = 1u,
                            Email = "fer@gmail.com",
                            FamilyId = 1u,
                            Name = "Fernando",
                            RolId = 1u,
                            Surname = "Leonardelli"
                        },
                        new
                        {
                            Id = 2u,
                            Email = "flor@gmail.com",
                            FamilyId = 1u,
                            Name = "Florencia",
                            RolId = 2u,
                            Surname = "Leonardelli"
                        });
                });

            modelBuilder.Entity("api.Models.UserPermissionDevice", b =>
                {
                    b.Property<uint>("UserId")
                        .HasColumnName("user_id")
                        .HasColumnType("int unsigned");

                    b.Property<uint>("PermissionId")
                        .HasColumnName("permission_id")
                        .HasColumnType("int unsigned");

                    b.Property<uint>("DeviceId")
                        .HasColumnName("device_id")
                        .HasColumnType("int unsigned");

                    b.HasKey("UserId", "PermissionId", "DeviceId")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0, 0 });

                    b.HasIndex("DeviceId")
                        .HasName("device_id");

                    b.HasIndex("PermissionId")
                        .HasName("permission_id");

                    b.ToTable("user_permission_device");

                    b.HasData(
                        new
                        {
                            UserId = 1u,
                            PermissionId = 1u,
                            DeviceId = 1u
                        },
                        new
                        {
                            UserId = 1u,
                            PermissionId = 2u,
                            DeviceId = 1u
                        },
                        new
                        {
                            UserId = 2u,
                            PermissionId = 3u,
                            DeviceId = 1u
                        },
                        new
                        {
                            UserId = 2u,
                            PermissionId = 4u,
                            DeviceId = 1u
                        });
                });

            modelBuilder.Entity("api.Models.Device", b =>
                {
                    b.HasOne("api.Models.DeviceType", "DeviceType")
                        .WithMany("Device")
                        .HasForeignKey("DeviceTypeId")
                        .HasConstraintName("device_ibfk_1")
                        .IsRequired();
                });

            modelBuilder.Entity("api.Models.User", b =>
                {
                    b.HasOne("api.Models.Family", "Family")
                        .WithMany("User")
                        .HasForeignKey("FamilyId")
                        .HasConstraintName("user_ibfk_2")
                        .IsRequired();

                    b.HasOne("api.Models.Rol", "Rol")
                        .WithMany("User")
                        .HasForeignKey("RolId")
                        .HasConstraintName("user_ibfk_1")
                        .IsRequired();
                });

            modelBuilder.Entity("api.Models.UserPermissionDevice", b =>
                {
                    b.HasOne("api.Models.Device", "Device")
                        .WithMany("UserPermissionDevice")
                        .HasForeignKey("DeviceId")
                        .HasConstraintName("user_permission_device_ibfk_3")
                        .IsRequired();

                    b.HasOne("api.Models.Permission", "Permission")
                        .WithMany("UserPermissionDevice")
                        .HasForeignKey("PermissionId")
                        .HasConstraintName("user_permission_device_ibfk_2")
                        .IsRequired();

                    b.HasOne("api.Models.User", "User")
                        .WithMany("UserPermissionDevice")
                        .HasForeignKey("UserId")
                        .HasConstraintName("user_permission_device_ibfk_1")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
